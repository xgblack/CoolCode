#服务器配置
server:
  port: 8990
  compression:
    enabled: true #开启压缩
    mime-types: application/json
    min-response-size: 300KB
#  undertow:
#    threads:
#      io: 16 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
#      worker: 400  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
#    buffer-size: 1024  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
#    direct-buffers: true  # 是否分配的直接内存,如果设置为true,则会使用操作系统的内存,这样会减少一次拷贝,但是会增加一次内存分配
#    ssl:
#      key-alias: myhttps #证书别名
#      key-store: classpath:myhttps.jks #证书路径
#      key-store-password: admin #证书密码


spring:
  application:
    name: ccboot
  servlet:
    multipart:
      max-file-size: 100MB
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    locale: zh

# 日志配置
logging:
  file:
    # 日志文件名，全路径. logback-spring.xml中通过LOG_FILE获取
    name: /data/logs/${spring.application.name}/app.log
  level:
    com.xgblack: trace
    org.springframework: warn


# 数据源及mybatis、mybatis-flex配置
mybatis-flex:
  # 搜索指定包别名
  typeAliasesPackage: com.xgblack.**.domain
  # 不支持多包, 如有需要可在注解配置 或 提升扫包等级：com.**.**.mapper
  mapper-package: com.xgblack.**.mapper
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapper-locations: classpath*:mapper/**/*.xml

  #本部分（Configuration）的配置都为 MyBatis 原生支持的配置，有关配置请参考:https://mybatis.org/mybatis-3/zh/configuration.html#%E8%AE%BE%E7%BD%AE%EF%BC%88settings%EF%BC%89
  configuration:
    # 自动驼峰命名规则（camel case）映射
    mapUnderscoreToCamelCase: true
    # MyBatis 自动映射策略
    # NONE：不启用 PARTIAL：只对非嵌套 resultMap 自动映射 FULL：对所有 resultMap 自动映射
    autoMappingBehavior: FULL
    # MyBatis 自动映射时未知列或未知属性处理策
    # NONE：不做处理 WARNING：打印相关警告 FAILING：抛出异常和详细信息
    autoMappingUnknownColumnBehavior: NONE
    # 更详细的日志输出 会有性能损耗 org.apache.ibatis.logging.stdout.StdOutImpl
    # 关闭日志记录  org.apache.ibatis.logging.nologging.NoLoggingImpl
    # 默认日志输出 org.apache.ibatis.logging.slf4j.Slf4jImpl
    logImpl: org.apache.ibatis.logging.slf4j.Slf4jImpl
    cacheEnabled: true

  # MyBatis-Flex全局配置
  global-config:
    # 是否控制台打印 MyBatis-Flex 的 LOGO 及版本号
    print-banner: true
    # 逻辑删除数据存在标记值
    normal-value-of-logic-delete: 0
    # 逻辑删除数据删除标记值
    deleted-value-of-logic-delete: 1
    #全局的 ID 生成策略配置
    key-config:
      #自增的方式
      key-type: auto
#  admin-config:
#    enable: true
#    endpoint: http://admin-host:8080/message/collect
#    secret-key: secretKey



app:
  java:
    # 项目版本。注入Maven中的配置
    version: @java.version@
  # 调试模式
  security:
    mock-enable: true
    mock-secret: coolcode

